services:
    redis:
        image: redis:latest
        container_name: redis_db
        restart: always
        volumes:
            - ./data/redis:/data
        ports:
            - 6379:6379
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 30s
            retries: 3
            start_period: 10s
            timeout: 10s

    postgres:
        image: postgres:latest
        container_name: postgres_db
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        volumes:
            - ./data/postgres:/var/lib/postgresql/data
        ports:
            - 5432:5432
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "postgres"]
            interval: 30s
            retries: 3
            start_period: 10s
            timeout: 10s

    vote:
        build: ./vote
        container_name: vote
        restart: on-failure
        depends_on:
            redis:
                condition: service_healthy
        ports:
            - 8080:8080

    result:
        build: ./result
        container_name: result
        restart: on-failure
        depends_on:
            postgres:
                condition: service_healthy
        ports:
            - 8888:8888

    worker:
        build: ./worker
        container_name: worker
        restart: on-failure
        depends_on:
            redis:
                condition: service_healthy
            postgres:
                condition: service_healthy
